[
    {
        "label": "Faker",
        "importPath": "faker",
        "description": "faker",
        "isExtraImport": true,
        "detail": "faker",
        "documentation": {}
    },
    {
        "label": "Faker",
        "importPath": "faker",
        "description": "faker",
        "isExtraImport": true,
        "detail": "faker",
        "documentation": {}
    },
    {
        "label": "Faker",
        "importPath": "faker",
        "description": "faker",
        "isExtraImport": true,
        "detail": "faker",
        "documentation": {}
    },
    {
        "label": "DynamicProvider",
        "importPath": "faker.providers",
        "description": "faker.providers",
        "isExtraImport": true,
        "detail": "faker.providers",
        "documentation": {}
    },
    {
        "label": "BaseProvider",
        "importPath": "faker.providers",
        "description": "faker.providers",
        "isExtraImport": true,
        "detail": "faker.providers",
        "documentation": {}
    },
    {
        "label": "random",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "random",
        "description": "random",
        "detail": "random",
        "documentation": {}
    },
    {
        "label": "fake",
        "kind": 5,
        "importPath": "faker_demo.dynamic_provider",
        "description": "faker_demo.dynamic_provider",
        "peekOfCode": "fake = Faker()\nframework_provider = DynamicProvider(\n    provider_name=\"framework\",\n    elements=[\"FastAPI\", \"Django\", \"Flask\"]\n)\nfake.add_provider(framework_provider)\nfor _ in range(5):\n    print(fake.framework())\n\"\"\"\nExample",
        "detail": "faker_demo.dynamic_provider",
        "documentation": {}
    },
    {
        "label": "framework_provider",
        "kind": 5,
        "importPath": "faker_demo.dynamic_provider",
        "description": "faker_demo.dynamic_provider",
        "peekOfCode": "framework_provider = DynamicProvider(\n    provider_name=\"framework\",\n    elements=[\"FastAPI\", \"Django\", \"Flask\"]\n)\nfake.add_provider(framework_provider)\nfor _ in range(5):\n    print(fake.framework())\n\"\"\"\nExample\n-------",
        "detail": "faker_demo.dynamic_provider",
        "documentation": {}
    },
    {
        "label": "fake",
        "kind": 5,
        "importPath": "faker_demo.main",
        "description": "faker_demo.main",
        "peekOfCode": "fake = Faker([\"en_US\"])\nprint(\"name: \", fake.name())\nprint(\"email: \", fake.email())\nprint(\"first_name: \", fake.first_name())\nprint(\"last_name: \", fake.last_name())\nprint(\"address: \", fake.address())\nprint(\"city: \", fake.city())\nprint(\"country: \", fake.country())\nprint(\"country_code: \", fake.country_code())\nprint(\"sentence: \", fake.sentence())",
        "detail": "faker_demo.main",
        "documentation": {}
    },
    {
        "label": "TopicProvider",
        "kind": 6,
        "importPath": "faker_demo.providers",
        "description": "faker_demo.providers",
        "peekOfCode": "class TopicProvider(BaseProvider):\n    def topic_list(self):\n        return random.choice([\n            'Machine Leaning',\n            'Artificial Inteligence',\n            'Software Engineering'\n        ])\nfake.add_provider(TopicProvider)\nfor _ in range(5):\n    print(fake.topic_list())",
        "detail": "faker_demo.providers",
        "documentation": {}
    },
    {
        "label": "fake",
        "kind": 5,
        "importPath": "faker_demo.providers",
        "description": "faker_demo.providers",
        "peekOfCode": "fake = Faker()\nclass TopicProvider(BaseProvider):\n    def topic_list(self):\n        return random.choice([\n            'Machine Leaning',\n            'Artificial Inteligence',\n            'Software Engineering'\n        ])\nfake.add_provider(TopicProvider)\nfor _ in range(5):",
        "detail": "faker_demo.providers",
        "documentation": {}
    }
]